apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hume-orchestra.fullname" . }}-orchestra-controller
  labels:
    {{- include "orchestra.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
  {{ toYaml . | indent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.controller.replicas | default 1 }}
  {{ end }}
  selector:
    matchLabels:
      app: {{ include "hume-orchestra.fullname" . }}-orchestra-controller
  {{- with .Values.deploymentStrategy }}
  strategy:
  {{ toYaml . | trim | indent 4 }}
  {{ end }}
  template:
    metadata:
      labels:
        app: {{ include "hume-orchestra.fullname" . }}-orchestra-controller
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "hume-orchestra.serviceAccountName" . }}
      {{ end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      # temporary disable serviceLinks until single uri config setting is available in orchestra-controller for eventstore connection
      enableServiceLinks: false
      volumes:
        {{- with .Values.controller.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        - name: {{ include "hume-orchestra.fullname" . }}-orchestra-controller
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.humeCoreBaseRepository }}{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: metrics
              containerPort: 7001
              protocol: TCP
          startupProbe:
            httpGet:
              path: {{ .Values.startupProbe.path }}
              port: {{ .Values.startupProbe.port }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.livenessProbe.port }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.readinessProbe.port }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          envFrom:
            - configMapRef:
                name: {{ include "hume-orchestra.fullname" . }}-orchestra-controller-configmap
          env:
            {{- with .Values.controller.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.controller.resources | nindent 12 }}
          
