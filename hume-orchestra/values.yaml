# Default values for hume-orchestra.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

baseDomain: ""
imagePullSecrets:
  - name: image-pull-secret
humeCoreBaseRepository: "docker.graphaware.com/internal/"
imagePullPolicy: "Always"

postgresql:
  enabled: true
  auth:
    database: orchestra
    username: orchestra
    password: orchestra

zookeeper:
  enabled: true

image:
  name: "hume-orchestra"
  tag: ""
port: 8100

cluster:
  nodes:
    active:
      number: 1

controller:
  env: []
  # - name: spring.datasource.username
  #   valueFrom:
  #     secretKeyRef:
  #       key: db-username
  #       name: orchestra-postgres-db-username
  # volumeMounts config that will be set on the container
  volumeMounts: []
  # volumes config to be set on the orchestra pod
  volumes: []
  # volumes claim templates configs to be set on the deployment
  volumeClaimTemplates: []
  labels: {}
  port: 8100
worker:
  env: []
  # - name: spring.datasource.username
  #   valueFrom:
  #     secretKeyRef:
  #       key: db-username
  #       name: orchestra-postgres-db-username
  # volumeMounts config that will be set on the container
  volumeMounts: []
  # volumes config to be set on the orchestra pod
  volumes: []
  # volumes claim templates configs to be set on the deployment
  volumeClaimTemplates: []
  labels: {}
  port: 8100
startupProbe:
  failureThreshold: 20
  periodSeconds: 7
  path: /actuator/metrics
  port: metrics
livenessProbe:
  failureThreshold: 10
  timeoutSeconds: 10
  periodSeconds: 5
  path: /actuator/metrics
  port: metrics
readinessProbe:
  failureThreshold: 10
  timeoutSeconds: 10
  periodSeconds: 5
  path: /actuator/metrics
  port: metrics

replicaCount: 1

deployment:
  replicas: ""
service:
  type: ClusterIP
persistence:
  enabled: true
  accessModes:
    - ReadWriteOnce
  mountPath: "/data"
  subPath: ""
  size: 1Gi
  annotations: {}
  selector: {}
# Additional environment variables for hume-core/orchestra
# Can also override existing environment variables

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
