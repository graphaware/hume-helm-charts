apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hume-helm.fullname" . }}-web
  labels:
    {{- include "hume.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
  {{ toYaml . | indent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.web.deployment.replicas | default 1 }}
  {{ end }}
  selector:
    matchLabels:
      app: {{ include "hume-helm.fullname" . }}-web
  {{- with .Values.deploymentStrategy }}
  strategy:
  {{ toYaml . | trim | indent 4 }}
  {{ end }}
  template:
    metadata:
      labels:
        app: {{ include "hume-helm.fullname" . }}-web
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "hume-helm.serviceAccountName" . }}
      {{ end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "hume-helm.fullname" . }}-web
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.humeCoreBaseRepository }}{{ .Values.web.image.name }}:{{ include "webImageTag" . }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - name: web
              containerPort: 8081
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "hume-helm.fullname" . }}-web-configmap
            {{- if .Values.web.additionalSecretsStore }}
            - secretRef:
                name: {{ .Values.web.additionalSecretsStore }}
            {{- end }}
          env:
            {{- with .Values.web.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hume-helm.fullname" . }}-api
  labels:
    {{- include "hume.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
  {{ toYaml . | indent 4 }}
  {{- end }}
spec:
  {{ if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.api.deployment.replicas | default 1 }}
  {{ end }}
  selector:
    matchLabels:
      app: {{ include "hume-helm.fullname" . }}-api
  {{ with .Values.deploymentStrategy }}
  strategy:
  {{ toYaml . | trim | indent 4 }}
  {{ end }}
  template:
    metadata:
      labels:
        app: {{ include "hume-helm.fullname" . }}-api
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "hume-helm.serviceAccountName" . }}
      {{ end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      # temporary disable serviceLinks until single uri config setting is available in API for eventstore connection
      enableServiceLinks: false
      volumes:
        {{- with .Values.api.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        - name: {{ include "hume-helm.fullname" . }}-api
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.humeCoreBaseRepository }}{{ .Values.api.image.name }}:{{ include "apiImageTag" . }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - name: api
              containerPort: 8080
              protocol: TCP
            - name: metrics
              containerPort: 7001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: metrics
            initialDelaySeconds: {{ .Values.api.probes.livenessProbe.inititalDelaySeconds }}
            periodSeconds: {{ .Values.api.probes.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.api.probes.livenessProbe.failureThreshold }}
          startupProbe:
            httpGet:
              path: /actuator/health
              port: metrics
            initialDelaySeconds: {{ .Values.api.probes.startupProbe.inititalDelaySeconds }}
            periodSeconds: {{ .Values.api.probes.startupProbe.periodSeconds }}
            failureThreshold: {{ .Values.api.probes.startupProbe.failureThreshold }}
          envFrom:
            - configMapRef:
                name: {{ include "hume-helm.fullname" . }}-api-configmap
            {{- if .Values.api.additionalSecretsStore }}
            - secretRef:
                name: {{ .Values.api.additionalSecretsStore }}
            {{- end }}
            - secretRef:
                name: hume-licence
                optional: true
          env:
            {{- with .Values.api.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if and .Values.api.remoteApi.enabled .Values.api.remoteApi.initialKey.create .Values.api.remoteApi.initialKey.existingSecret }}
            - name: hume.api.initial-key.token
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.api.remoteApi.initialKey.existingSecret }}
                  key: {{ .Values.api.remoteApi.initialKey.existingSecretKey | default "token" }}
            {{- end }}
            {{- if not .Values.postgresqlCore.enabled }}
            - name: spring.datasource.password
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.customApiPostgresql.global.postgresql.secretRef.existingSecret }}
                  key: {{ .Values.customApiPostgresql.global.postgresql.secretRef.passwordSecretKey }}
            {{- end }}
          volumeMounts:
            {{- with .Values.api.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          
