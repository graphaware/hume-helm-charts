# Default values for hume-alerting.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
baseRepository: "docker.graphaware.com/internal"
humeMessagingProvider: "kafka"

kafka:
  internal:
    enabled: true
    port: 9092
    zookeper_port: 2181
  external:
    host: ""
    port: "9092"
  topics:
    prefix: ""
    names:
      notification: "notification"
      action: "action"
      scheduler: "scheduler"
      feedback: "feedback"
      dryRunRequest: "dryrun-request"
      dryRunResult: "dryrun-result"
      remoteEvents: "events"
      operatorMetrics: "operator-metrics"
  spring_cloud_stream_kafka_binder_configuration_ssl_endpoint_identification_algorithm: "https"
  spring_cloud_stream_kafka_binder_configuration_sasl_mechanism: "PLAIN"
  spring_cloud_stream_kafka_binder_configuration_security_protocol: "SASL_SSL"
  spring_cloud_stream_kafka_binder_configuration_sasl_jaas_config: ""
  spring_kafka_properties_sasl_mechanism: "PLAIN"
  spring_kafka_properties_sasl_jaas_config: ""
  spring_kafka_properties_security_protocol: "SASL_SSL"
  spring_kafka_properties_ssl_endpoint_identification_algorithm: "https"

azure:
  serviceBus:
    connection_string: ""
    subscription_id: ""
    topics_names_scheduler: "scheduler"
    topics_names_action: "action"
    topics_names_notification: "notification"
    topics_names_feedback: "feedback"
    topics_names_operator_metrics: "operator-metrics"
    topics_names_dryRunRequest: "dryrun-request"
    topics_names_dryRunResult: "dryrun-result"

controller:
  image: 
    name: "hume-alerting-controller"
    tag: ""
  logging_format: "json"
  mail_host: "smtp"
  mail_port: 1025
  mail_username: ""
  mail_password: ""
  mail_properties_mail_smtp_auth: ""
  mail_from: ""
  mail_to: ""
  remoteEventsEnabled: "true"
  execution_ttl_active: "true"
  execution_ttl_ms: "60000"

operator:
  image:
    name: "hume-alerting-operator"
    pullPolicy: "Always"
    tag: ""
  logging_format: "json"
  maxTransactionRetry: 0
  connectionAcquisitionTimeoutSeconds: 3
  connectionTimeoutSeconds: 3
  maxPollRecords: 1
  maxPollIntervalMs: 600000000
  globalBatchSize: 50000
  slotBatchSize: 25000
  hume_security_encryption_engine: "keystore"
  management_endpoints_web_exposure_include: "bindings,health,prometheus"
  hume_security_encryption_keystore_file: /opt/hume-keystore
  hume_security_encryption_keystore_password: changeit
  hume_security_encryption_keystore_secret_alias: secret

imagePullSecrets:
  - name: graphaware-docker-creds

nameOverride: ""
fullnameOverride: "alerting"

postgresql-alerting-controller-reference: &postgresql_alerting_controller_reference postgresql-alerting-controller
postgresql-alerting-operator-reference: &postgresql_alerting_operator_reference postgresql-alerting-operator

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  ed: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

postgresqlAlertingController:
  global:
    postgresql:
      auth:
        database: alert-controller
        username: alert-controller
        password: controller-password
        servicePort: 5432
  fullnameOverride: *postgresql_alerting_controller_reference

postgresqlAlertingOperator:
  global:
    postgresql:
      auth:
        database: alert-operator
        username: alert-operator
        password: operator-password
        servicePort: 5432
  fullnameOverride: *postgresql_alerting_operator_reference

